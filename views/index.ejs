<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title>Category Remover Tool</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="css/multi-select.css">
    <link rel="stylesheet" type="text/css" href="css/stylesheet.css">
    <style>


    </style>

  </head>
  <body>
    <div class="container">
      <!-- NAVBAR -->
      <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item">
          <a class="nav-link active" id="categories-tab" data-toggle="tab" href="#categories" role="tab" aria-controls="categories" aria-selected="true">Categories</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" id="businesses-tab" data-toggle="tab" href="#businesses" role="tab" aria-controls="businesses" aria-selected="false">Businesses</a>
        </li>

      </ul>
      <div class="tab-content" id="myTabContent">
        <div class="tab-pane fade show active" id="categories" role="tabpanel" aria-labelledby="categories-tab">
          <p id="select_buttons-categories" class="">
            <button type="button" class="btn btn-outline-primary" id="select-all" onclick="selectAll('categories');">Keep All</button>
            <button type="button" class="btn btn-outline-warning" id="deselect-all" onclick="deselectAll('categories');">Remove All</button>
          </p>
          <p class="">
            <select id='pre-selected-categories' multiple='multiple'>

              <% var keepCategoryArray = new Array(); %>
              <% var keepBusinessArray = new Array(); %>

              <% for(j=0; j < list.length; j++) { %>

                <% if(keepCategoryArray.indexOf(list[j][0]) == -1) { %>
                <%   keepCategoryArray.push(list[j][0]); %>
                <% } %>

                <% if(keepBusinessArray.indexOf(list[j][1]) == -1) { %>
                <%   keepBusinessArray.push(list[j][1]); %>
                <% } %>

              <% } %>

              <%  keepCategoryArray.sort(); %>
              <%  keepBusinessArray.sort(); %>

              <% for(q=0; q < keepCategoryArray.length; q++){ %>

              <option id='option_categories<%= q %>' value='<%= keepCategoryArray[q] %>' selected><%= keepCategoryArray[q] %></option>
              <% } %>
              </select>
            </p>
        </div>
        <div class="tab-pane fade" id="businesses" role="tabpanel" aria-labelledby="businesses-tab">

          <p id="select_buttons-businesses" class="">
            <button type="button" class="btn btn-outline-primary" id="select-all" onclick="selectAll('businesses');">Keep All</button>
            <button type="button" class="btn btn-outline-warning" id="deselect-all" onclick="deselectAll('businesses');">Remove All</button>
          </p>
          <p class="">
            <select id='pre-selected-businesses' multiple='multiple'>
              <% for(q=0; q < keepBusinessArray.length; q++){ %>
              <option id='option_businesses<%= q %>' value='<%= keepBusinessArray[q] %>' selected><%= keepBusinessArray[q] %></option>
              <% } %>
            </select>
            </p>

        </div>
      </div>

      <button type="button" class="btn btn-outline-danger" id="next" onclick="nextTab();">NEXT</button>
      <button type="button" class="btn btn-outline-primary" id="submit" onclick="submitSelect();">Submit</button>

    </div>

    <form action="/clean-list" method="post" id="categoryForm">
      <input type="hidden" value="" id="selectionValues" name="selection">
    </form>

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
    <script src="js/jquery.multi-select.js"></script>
    <script src="js/main.js"></script>

    <% for(a=0; a < list.length; a++) { %>
      <%   let itemZero = '\"' + list[a][0] + '\"';  %>
      <%   let itemOne =  '\"' + list[a][1] + '\"';  %>
      <%   list[a] = '[' + itemOne + ', ' + itemZero + ']'; %>
    <% } %>

    <script type="text/javascript">
      var listObj = [<%- list.join(', \n') %>];

      // 1. on category change
      //   - get array of changed categories
      //   - get array of businesses that match those categories
      //   - get array of ids that match those businesses
      function getCategores(){
        let result = { "selected": [], "deselected": [] };

        // get each option value and place in selected or deselected
        // depending on 'selected' attribute


        return result;
      };


      function getBusinessNames(categories){
        let result = { "selected": [], "deselected": [] };

        // loop through array categories.selected
        //   for each item, loop through listArray
        //     for each item
        //        if item[1] == category.selected item, then push item[0] to result.selected

        // repeat for categories.deselected

        return result;
      };

      function getBusinessIds(businessNames){
        let result = { "selected": [], "deselected": [] };
        // loop through options_businesses
        //   for each item
        //     if businessNames.selected includes item.val(), then push item id to result.selected

        // repeat for businessNames.deselected
        return result; 
      };

      function updateSelection(businessIds){
        $('#pre-selected-businesses').multiSelect( 'select', businessIds.selected );
        $('#pre-selected-businesses').multiSelect('deselect', businessIds.deselected);
      };

      function nextTab(){
        let categories = getCategories();
        let businessNames = getBusinessNames(categories);
        let businessIds = getBusinessIds(businessNames);
        updateSelection(businessIds);
      };

    </script>

    <script type="text/javascript">
    /*
      var listObj = {<%- list.join(', \n') %>};

      function getBusinesses(){};
      function getCategories(){};

      $('#pre-selected-categories').on('change', function(){
        // loop through pre-selected-categories
        //   and push each de-selected option value to array (deselectedCategory)

        var optionValues = {
          "selected": [],
          "deselected": []
        };

        //console.log( $('#pre-selected-categories option').attr('selected') );
        $("#pre-selected-categories option").each(function(i){
          let optionId = "option_categories" + i;
          if($('#' + optionId).is(":selected") == true) {
            optionValues.selected.push($('#' + optionId).val());
          } else {
            optionValues.deselected.push($('#' + optionId).val());
          }
        });
        //console.log(optionValues.selected);
// works

        // loop through #pre-selected-businesses
        //   if deselectedCategory includes option value then set select attribute to false
        //   else set select attribute to true
        $("#pre-selected-businesses option").each(function(i){
          //console.log($(this));
          //console.log($(this).val());
          let thisOption = $(this).val();
          //console.log($(this).attr());
          if(optionValues.deselected.includes( listObj[ thisOption ] ))  {
            //console.log(optionValues.deselected.includes( listObj[ thisOption ] ));
            //set select attribute to false
            console.log($(this))
            $("#pre-selected-businesses").multiSelect('deselect', [$(this)] );
          }
        });

      });
      */
    </script>

    <script type="text/javascript">
      /* PRESETS */
        // 0. check if preset exists

        // 1. Create new preset
        // 2. Update existing preset
        // 3. Delete existing preset

        // 4. Select multiple presets
        // 5. Presets are used to choose which options are selected
        // 6. Apply Preset(s) button

        // presets are to be in JSON format and saved as a string to a text file on the server-side.
        // Here's a great solution for saving the json to file https://www.npmjs.com/package/jsonfile

    </script>

    <script>
      /*
        1. on category tab
          - show all categories (uniq)
        2. on busienss tab
          - show in their respective columns according to which column the categories are in
        3. resulting array is built based on business names
      */
    </script>

  </body>
</html>
